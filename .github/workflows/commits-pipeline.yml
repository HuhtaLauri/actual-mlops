name: Commits pipeline
run-name: Commits pipeline ${{ github.event_name }} ${{ github.actor }}

on:

  workflow_dispatch:
    inputs:
      num_days:
        description: "How many days to go back for the collector"
        required: false
        default: 3

      dry-run:
        description: "Dry run does not commit. Default: [false]"
        required: false
        type: boolean
        default: false

  schedule:
    - cron: '0 2 * * *'

permissions:
  contents: write

jobs:

  pipeline:

    runs-on: self-hosted-azure

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Set branch name
        run: |
          echo "BRANCH_NAME=ETL/commits/$(date -I)" >> $GITHUB_ENV

      - name: Create and checkout new branch
        run: |
          git checkout -b ${{ env.BRANCH_NAME }}

      - name: Collect commits
        env:
          GITHUB_TOKEN: ${{ secrets.GA_TOKEN }}
        run: |
          num_days=${{ github.event.inputs.num_days != '' && github.event.inputs.num_days || 3 }}
          echo "Fetching for $num_days days"

          python -m src.engineering.github.collector \
          -s commits \
          --repos src/engineering/github/repositories.txt \
          --num-days $num_days

      - name: DVC
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          dvc fetch -r commits
          find data/raw/commits/ -name "*json" | xargs dvc add -v
          dvc push -r commits

      - name: Push new branch
        if:  ${{ inputs.dry-run != true }}
        env:
          GITHUB_TOKEN: ${{ secrets.GA_TOKEN }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add .
          git commit -m "Commit pipeline ${{ env.BRANCH_NAME }}"
          git push origin ${{ env.BRANCH_NAME }}

      - name: Create pull request
        if: ${{ inputs.dry-run != true }}
        env:
          GITHUB_TOKEN: ${{ secrets.GA_TOKEN }}
        run: |
          gh pr create \
          -a "@me" \
          -B main \
          -H $(git branch --show-current) \
          -l automerge \
          -t "Commits pipeline $(date -I)" \
          -b "Automated ETL pull request"

